"""Add Company and Score models

Revision ID: 7f9159875586
Revises: 9618e9489d2e
Create Date: 2025-01-07 19:08:33.800889

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '7f9159875586'
down_revision: Union[str, None] = '9618e9489d2e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('score_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('company', sa.Column('logo', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('company', sa.Column('tagline', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True))
    op.add_column('company', sa.Column('linkedin', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('company', sa.Column('facebook', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('company', sa.Column('twitter', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('company', sa.Column('instagram', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column(
        'company',
        sa.Column('last_updated', sa.DateTime(), nullable=False, server_default=sa.func.now())
    )
    op.alter_column('company', 'last_updated', server_default=None)  # Remove default after adding column
    op.drop_column('company', 'local_score')
    op.drop_column('company', 'iktva_certificate')
    op.drop_column('company', 'local_content_certificate')
    op.drop_column('company', 'last_year_iktva_score')
    op.drop_column('company', 'last_year_local_score')
    op.drop_column('company', 'current_iktva_score')
    # ### end Alembic commands ###


def downgrade() -> None:
    # Provide a default value to avoid NotNullViolation errors
    op.add_column('company', sa.Column('current_iktva_score', sa.DOUBLE_PRECISION(precision=53), nullable=False, server_default="0"))
    op.add_column('company', sa.Column('last_year_local_score', sa.DOUBLE_PRECISION(precision=53), nullable=False, server_default="0"))
    op.add_column('company', sa.Column('last_year_iktva_score', sa.DOUBLE_PRECISION(precision=53), nullable=False, server_default="0"))
    op.add_column('company', sa.Column('local_content_certificate', sa.VARCHAR(), nullable=True))  # Changed from False to True
    op.add_column('company', sa.Column('iktva_certificate', sa.VARCHAR(), nullable=True))  # Changed from False to True
    op.add_column('company', sa.Column('local_score', sa.DOUBLE_PRECISION(precision=53), nullable=False, server_default="0"))

    # Drop newly added columns
    op.drop_column('company', 'last_updated')
    op.drop_column('company', 'instagram')
    op.drop_column('company', 'twitter')
    op.drop_column('company', 'facebook')
    op.drop_column('company', 'linkedin')
    op.drop_column('company', 'tagline')
    op.drop_column('company', 'logo')

    # Drop the newly created `score` table
    op.drop_table('score')

    # Remove the default constraints after migration (optional)
    op.execute("ALTER TABLE company ALTER COLUMN current_iktva_score DROP DEFAULT")
    op.execute("ALTER TABLE company ALTER COLUMN last_year_local_score DROP DEFAULT")
    op.execute("ALTER TABLE company ALTER COLUMN last_year_iktva_score DROP DEFAULT")
    op.execute("ALTER TABLE company ALTER COLUMN local_score DROP DEFAULT")

    # ### end Alembic commands ###
